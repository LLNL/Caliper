##############################################################################
# Copyright (c) 2022, Lawrence Livermore National Security, LLC and RADIUSS
# project contributors. See the COPYRIGHT file for details.
#
# SPDX-License-Identifier: (MIT)
# (GARRETT REMOVE THIS BEFORE PUSHING! THIS MODIFIED BUILD AND TEST IS JUST FOR CI DEVELOPMENT)
##############################################################################

stages:
  - is-machine-up
  - status_initiate
  - build_and_test
  - status_update

##############################################################################
# UTILITIES
.on_lassen:
  tags:
    - shell
    - lassen
  rules:
    # Runs except if we explicitly deactivate lassen by variable.
    - if: '$ON_LASSEN == "OFF"'
      when: never
    # Advanced jobs can only run on master, develop or if ALL_TARGETS is ON.
    # Set ADVANCED_JOB to ON in the job definition to make it an advanced job.
    - if: '$ADVANCED_JOB == "ON" && $CI_COMMIT_BRANCH != "main" && $CI_COMMIT_BRANCH != "develop" && $ALL_TARGETS != "ON"'
      when: never
    # Only report failure if the pipeline failed.
    - if: '$CI_JOB_NAME =~ /status_failure/'
      when: on_failure
    # A true statement is expected to allow jobs to run. Here is the default.
    - when: on_success

.status_report: &status_report
    - export context="lassen"
    - |
      curl --url "https://api.github.com/repos/${GITHUB_PROJECT_ORG}/${GITHUB_PROJECT_NAME}/statuses/${CI_COMMIT_SHA}" \
           --header 'Content-Type: application/json' \
           --header "authorization: Bearer ${GITHUB_TOKEN}" \
           --data "{ \"state\": \"${pipeline_status}\", \"target_url\": \"${CI_PIPELINE_URL}\", \"description\": \"GitLab ${context} pipeline\", \"context\": \"ci/gitlab/${context}\" }"

.print_lassen_reproducer: &print_lassen_reproducer
    - |
      echo -e "\e[7;32m### Lassen reproducer\e[0m"
      if [[ -n "${LLNL_SERVICE_USER}" ]]; then echo -e "xsu ${LLNL_SERVICE_USER}"; fi
      echo -e "
      working_dir=\"/usr/workspace/\${USER}/${GITHUB_PROJECT_NAME}/${CI_PIPELINE_ID}-\$(date +%s)\"
      mkdir -p \${working_dir} && cd \${working_dir} \n
      git clone https://github.com/${GITHUB_PROJECT_ORG}/${GITHUB_PROJECT_NAME}.git --single-branch --depth=1 \n
      cd ${GITHUB_PROJECT_NAME}
      git fetch origin --depth=1 ${CI_COMMIT_SHA} \n
      git checkout ${CI_COMMIT_SHA} \n
      git submodule update --init --recursive \n
      SPEC=\"${SPEC//\"/\\\"}\" MODULE_LIST=\"${MODULE_LIST}\" lalloc ${LASSEN_BUILD_AND_TEST_JOB_ALLOC} ${BUILD_AND_TEST_CMD}"
      echo -e "\e[7;32m### End of reproducer\e[0m"

.build_and_test_on_lassen:
  extends: [.custom_build_and_test, .on_lassen]
  stage: build_and_test
  script:
    # Print a reproducer
    - *print_lassen_reproducer
    # The actual launch command
    - lalloc ${LASSEN_BUILD_AND_TEST_JOB_ALLOC} ${BUILD_AND_TEST_CMD}

##############################################################################
# JOBS

status_pending:
  extends: [.on_lassen]
  variables:
    GIT_STRATEGY: none
  stage: status_initiate
  script:
    - export pipeline_status="pending"
    - *status_report

# CUDA.
clang_12_0_1_gcc_8_3_1_cuda_10_1_243:
  variables:
    SPEC: "${PROJECT_LASSEN_VARIANTS} +cuda %clang@12.0.1.gcc.8.3.1 ^cuda@10.1.243+allow-unsupported-compilers ${PROJECT_LASSEN_DEPS}"
  extends: .build_and_test_on_lassen

clang_12_0_1_gcc_8_3_1_cuda_11_2_0:
  variables:
    SPEC: "${PROJECT_LASSEN_VARIANTS} +cuda %clang@12.0.1.gcc.8.3.1 ^cuda@11.2.0+allow-unsupported-compilers ${PROJECT_LASSEN_DEPS}"
    MODULE_LIST: "cuda/11.2.0"
  extends: .build_and_test_on_lassen

clang_14_0_5_gcc_8_3_1_cuda_11_7_0:
  variables:
    SPEC: "${PROJECT_LASSEN_VARIANTS} +cuda %clang@14.0.5.gcc.8.3.1 ^cuda@11.7.0+allow-unsupported-compilers ${PROJECT_LASSEN_DEPS}"
    MODULE_LIST: "cuda/11.7.0"
  extends: .build_and_test_on_lassen

xl_2022_08_19_gcc_8_3_1_cuda_11_2_0:
  variables:
    SPEC: "${PROJECT_LASSEN_VARIANTS} +cuda %xl@16.1.1.12.gcc.8.3.1 ^cuda@11.2.0+allow-unsupported-compilers ${PROJECT_LASSEN_DEPS}"
    MODULE_LIST: "cuda/11.2.0"
  extends: .build_and_test_on_lassen

xl_2022_08_19_gcc_8_3_1_cuda_11_7_0:
  variables:
    SPEC: "${PROJECT_LASSEN_VARIANTS} +cuda %xl@16.1.1.12.gcc.8.3.1 ^cuda@11.7.0+allow-unsupported-compilers ${PROJECT_LASSEN_DEPS}"
    MODULE_LIST: "cuda/11.7.0"
  extends: .build_and_test_on_lassen

gcc_8_3_1_cuda_11_7_0:
  variables:
    SPEC: "${PROJECT_LASSEN_VARIANTS} +cuda %gcc@8.3.1 ^cuda@11.7.0+allow-unsupported-compilers ${PROJECT_LASSEN_DEPS}"
    MODULE_LIST: "cuda/11.7.0"
  extends: .build_and_test_on_lassen


status_success:
  extends: [.on_lassen]
  variables:
    GIT_STRATEGY: none
  stage: status_update
  script:
    - export pipeline_status="success"
    - *status_report
  when: on_success

status_failure:
  extends: [.on_lassen]
  variables:
    GIT_STRATEGY: none
  stage: status_update
  script:
    - export pipeline_status="failure"
    - *status_report
  when: on_failure