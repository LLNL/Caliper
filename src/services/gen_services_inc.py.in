copyrightNotice="""
// Copyright (c) 2015, Lawrence Livermore National Security, LLC.
// Produced at the Lawrence Livermore National Laboratory.
//
// This file is part of Caliper.
// Written by David Boehme, boehme3@llnl.gov.
// LLNL-CODE-678900
// All rights reserved.
//
// For details, see https://github.com/scalability-llnl/Caliper.
// Please also see the LICENSE file for our additional BSD notice.
//
// Redistribution and use in source and binary forms, with or without modification, are
// permitted provided that the following conditions are met:
//
//  * Redistributions of source code must retain the above copyright notice, this list of
//    conditions and the disclaimer below.
//  * Redistributions in binary form must reproduce the above copyright notice, this list of
//    conditions and the disclaimer (as noted below) in the documentation and/or other materials
//    provided with the distribution.
//  * Neither the name of the LLNS/LLNL nor the names of its contributors may be used to endorse
//    or promote products derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS
// OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
// LAWRENCE LIVERMORE NATIONAL SECURITY, LLC, THE U.S. DEPARTMENT OF ENERGY OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
// WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
// ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

/// @file services.inc.cpp
/// Static list of all available Caliper service modules.
"""



initial_service_string = "@CALIPER_SERVICE_NAMES@"
def insert_magic_here(service_string):
    service_list=[x for x in service_string.split(" ") if x is not '']
    # print service_list
    service_ret = []
    for service in service_list:
        # print service
        items = service.split(";")
        condition=""
        if(len(items)>1):
            condition=items[1]
        service_ret.append([items[0]+"_service",condition])
    return service_ret
services_list = insert_magic_here(initial_service_string)
# print services_list



header = """
namespace cali
{
"""


service_declaration_text=""

for service in services_list:
    service_name = service[0]
    service_condition = service[1]
    if service_condition is not "":
        service_declaration_text += "#ifdef "+service_condition+"\n"
    service_declaration_text += "extern CaliperService "+service_name+";\n"
    if service_condition is not "":
        service_declaration_text += "#endif\n"

service_list_definition_text="const CaliperService caliper_services[] = {\n"

for service in services_list:
    service_name = service[0]
    service_condition = service[1]
    if service_condition is not "":
        service_list_definition_text += "#ifdef "+service_condition+"\n"
    service_list_definition_text += "    "+service_name+",\n"
    if service_condition is not "":
        service_list_definition_text += "#endif\n"

service_list_definition_text+="    { nullptr, nullptr }\n};\n\n}"

f = open('services.inc.cpp', 'w')

f.write(copyrightNotice)
f.write(header)
f.write(service_declaration_text)
f.write(service_list_definition_text)
f.write("\n")
